            String p12Password = "2150bf66-09de-47a9-b023-3a3a458cbfbc";
            String keyAlias = null; //https://stackoverflow.com/questions/18621508/getting-a-privatekey-object-from-a-p12-file-in-java
            String FileNameP12 = "client.p12";
            KeyStore keystore = null;
            Key key = null;
            Enumeration<String> aliases = null;

            key = myUtils.getPrivateKeyFromP12File(this.getFilesDir().getAbsolutePath()+'/'+ FileNameP12, p12Password);
            /*
            OutputStream myOutput = null;
            try {
                myOutput = new FileOutputStream(this.getFilesDir().getAbsolutePath()+'/'+ FileNameP12);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
            byte[] buffer = new byte[1024];
            int length = 0;
            InputStream myInput = null;
            try {
                myInput = getAssets().open(FileNameP12);
            } catch (IOException e) {
                e.printStackTrace();
            }
            while (true) {
                try {
                    if (!((length = myInput.read(buffer)) > 0)) break;
                } catch (IOException e) {
                    e.printStackTrace();
                }
                try {
                    myOutput.write(buffer, 0, length);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            try {
                myInput.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                myOutput.flush();
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                myOutput.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
             */

            File file = new File(this.getFilesDir().getAbsolutePath() + '/' + FileNameP12);

            if ( file.exists() ) {
                FileInputStream is = null;
                try {
                    is = new FileInputStream(this.getFilesDir().getAbsolutePath() + '/' + FileNameP12);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
                //InputStream is = this.getClass().getClassLoader().getResourceAsStream(this.getFilesDir().getAbsolutePath() + '/' + FileNameP12);
                try {
                    keystore = KeyStore.getInstance("PKCS12");
                } catch (KeyStoreException e) {
                    e.printStackTrace();
                }
                try {
                    keystore.load(is, p12Password.toCharArray());
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (NoSuchAlgorithmException e) {
                    e.printStackTrace();
                } catch (CertificateException e) {
                    e.printStackTrace();
                }
                try {
                    aliases = keystore.aliases();
                } catch (KeyStoreException e) {
                    e.printStackTrace();
                }
                while (aliases.hasMoreElements()) {
                    keyAlias = (String) aliases.nextElement();
                }
                try {
                    key = keystore.getKey(keyAlias, p12Password.toCharArray());
                } catch (KeyStoreException e) {
                    e.printStackTrace();
                } catch (NoSuchAlgorithmException e) {
                    e.printStackTrace();
                } catch (UnrecoverableKeyException e) {
                    e.printStackTrace();
                }
                System.out.println(key);
            }
